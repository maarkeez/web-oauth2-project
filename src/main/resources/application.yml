# Facebook oauth2-client config
facebook:
    client:
      clientId: 233668646673605
      clientSecret: 33b17e044ee6a4fa383f46ec6e28ea1d
      accessTokenUri: https://graph.facebook.com/oauth/access_token
      userAuthorizationUri: https://www.facebook.com/dialog/oauth
      tokenName: oauth_token
      authenticationScheme: query
      clientAuthenticationScheme: form
    resource:
      id: facebook
      userInfoUri: https://graph.facebook.com/me

# GitHub oauth2-client config
github:
  client:
    clientId: bd1c0a783ccdd1c9b9e4
    clientSecret: 1a9030fbca47a5b2c28e92f19050bb77824b5ad1
    accessTokenUri: https://github.com/login/oauth/access_token
    userAuthorizationUri: https://github.com/login/oauth/authorize
    clientAuthenticationScheme: form
  resource:
    id: github
    userInfoUri: https://api.github.com/user

# Twitter oauth2-client config
# twitter:
#   client:
#     clientId: oXJIDGVdB0PDnMICDwKckyzKm
#     clientSecret: Z4BpN51kNsb2wbEfzDXm40v38W3I2P1u4H6fvfM6HQraVfry5j
#     accessTokenUri: https://api.twitter.com/oauth/access_token
#     userAuthorizationUri: https://api.twitter.com/oauth/authorize
#     clientAuthenticationScheme: form
#   resource:
#     id: twitter
#     userInfoUri: https://api.twitter.com/1.1/users/show.json

linkedin:
   client:
      clientId: 771mrzk94hye1w
      clientSecret: iIJFgBf9lCb18zYe
      accessTokenUri: https://www.linkedin.com/oauth/v2/accessToken
      userAuthorizationUri: https://www.linkedin.com/oauth/v2/authorization
   resource:
      userInfoUri: https://api.linkedin.com/v1/people/~?format=json
      id: linkedin
      
# Config for serve as oauth2
security:
  oauth2:
    client:
      client-id: acme
      client-secret: acmesecret
      scope: read,write
      # Scopes approved: ALL
      auto-approve-scopes: '.*'
      

spring:
   # Database configuration
   datasource:
      url: jdbc:h2:file:~/h2/web_db
      username: admin
      password: admin
      driverClassName: org.h2.Driver
   jpa:
      hibernate:
         ddl-auto: update
      properties:
         hibernate:
            dialect: org.hibernate.dialect.H2Dialect
   # Enable web database access
   h2:
      console:
         enabled: true
         path: /h2-console
         
# Log configuration

# logs the SQL statements
log4j:
   logger:
      org:
         hibernate:
            SQL:debug 
            type:trace
logging:
   level:
      org:
         springframework:
            web:DEBUG
      com:
         web:
            oauth2:DEBUG

server.tomcat.accesslog:
   enabled: true
   pattern: '%h %l %u %t "%r" %s %b %D'

# debug: true
# trace: true
